.container {
    // max-width: 120rem;
    // margin: 8rem auto;
    background-color: $color-white;
    // box-shadow: var(--shadow-dark);

    // min-height: 50rem;
    // background: -webkit-image-set(
    //         url(../img/IDR_THEME_NTP_BACKGROUND@1x.png) 1x,
    //         url(../img/IDR_THEME_NTP_BACKGROUND@2x.png) 2x
    //     )
    //     left top repeat rgb(255, 255, 255);
    // background-attachment: fixed;

    @media only screen and (max-width: $bp-largest) {
        margin: 0;
        max-width: 100%;
        width: 100%;
    }
}
.row {
    margin: 0 auto;
    max-width: $grid-width;
    /*
        using max-width if width is less then specified width then it will occupy simply avialable width
    */

    @include respond(tab-landscape) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    /*apply to every row except for last child*/
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }
    
    @include clearfix;
    
    // attribute selector
    [class^="col-"] {
        // background-color: orangered;//uncomment to test it
        float: left;
        
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
            
            @include respond(tab-port) {
                margin-right: 0;//as on phone we are using content row-wise not col-wise
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal})/ 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2*#{$gutter-horizontal})/ 3);
    }

    .col-1-of-4 {
        width: calc((100% - 3*#{$gutter-horizontal})/ 4);
    }

    .col-2-of-3 {// we get this block by two col's of 1 of 3 + gutter width
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4 {//
        width: calc(2 * ((100% - 3*#{$gutter-horizontal})/ 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc((3 * (100% - 3*#{$gutter-horizontal})/ 4) + 2* #{$gutter-horizontal});
    }
}